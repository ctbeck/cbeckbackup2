color = "Year"
) +
theme(legend.position = "none")
output$plot <- renderPlotly({
chart %>%
ggplotly() %>%
config(displayModeBar = F)
})
})
leafletOutput("map")
observeEvent({
input$year
input$class}, {
pge_res_elec <-
pge_data_raw %>%
filter(
CUSTOMERCLASS == input$class,
YEAR == max(input$year) ##take the latest year
) %>%
mutate(
ZIPCODE = ZIPCODE %>% as.character()
) %>%
group_by(ZIPCODE) %>%
summarize(
TOTALKBTU = sum(TOTALKBTU, na.rm = T)
) %>%
right_join(
bay_zips %>% select(GEOID10),
by = c("ZIPCODE" = "GEOID10")
) %>%
st_as_sf() %>%
st_transform(4326)
res_pal <- colorNumeric(
palette = "Reds",
domain =
pge_res_elec$TOTALKBTU
)
output$map <- renderLeaflet({
leaflet() %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
data = pge_res_elec,
fillColor = ~res_pal(TOTALKBTU),
color = "white",
opacity = 0.5,
fillOpacity = 0.5,
weight = 1,
label = ~paste0(
round(TOTALKBTU),
" kBTU total in ",
ZIPCODE
),
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addLegend(
data = pge_res_elec,
pal = res_pal,
values = ~TOTALKBTU,
title = paste0("Total Residential<br>Electricity (kBTU), ", input$year)
)
})
})
selectInput(
inputId = "class",
label = "Customer Class:",
choices = c("Elec- Commercial", "Elec- Residential", "Gas- Commercial", "Gas- Residential"),
)
checkboxGroupInput(
inputId = "year",
label = "Year: ",
choices = 2017:2020,
selected = NULL,
inline = FALSE,
width = NULL
)
selectInput(
inputId = "class",
label = "Customer Class:",
choices = c("Elec- Commercial", "Elec- Residential", "Gas- Commercial", "Gas- Residential"),
selected = NULL
inline = FALSE,
width = NULL
)
checkboxGroupInput(
inputId = "year",
label = "Year: ",
choices = 2017:2020,
selected = NULL,
inline = FALSE,
width = NULL
)
selectInput(
inputId = "class",
label = "Customer Class:",
choices = c("Elec- Commercial", "Elec- Residential", "Gas- Commercial", "Gas- Residential"),
selected = NULL,
inline = FALSE,
width = NULL
)
checkboxGroupInput(
inputId = "year",
label = "Year: ",
choices = 2017:2020,
selected = NULL,
inline = FALSE,
width = NULL
)
selectInput(
inputId = "class",
label = "Customer Class:",
choices = c("Elec- Commercial", "Elec- Residential", "Gas- Commercial", "Gas- Residential"),
selected = NULL,
width = NULL
)
checkboxGroupInput(
inputId = "year",
label = "Year: ",
choices = 2017:2020,
selected = NULL,
inline = FALSE,
width = NULL
)
selectInput(
inputId = "class",
label = "Customer Class:",
choices = c("Elec- Commercial", "Elec- Residential", "Gas- Commercial", "Gas- Residential"),
selected = NULL,
multiple = FALSE,
selectize = TRUE,
width = NULL,
size = NULL
)
checkboxGroupInput(
inputId = "year",
label = "Year: ",
choices = 2017:2020,
selected = NULL,
inline = FALSE,
width = NULL
)
selectInput(
inputId = "class",
label = "Customer Class:",
choices = c("Elec- Commercial", "Elec- Residential", "Gas- Commercial", "Gas- Residential"),
selected = NULL
)
checkboxGroupInput(
inputId = "year",
label = "Year: ",
choices = 2017:2020,
selected = NULL,
inline = FALSE,
width = NULL
)
selectInput(
inputId = "class",
label = "Customer Class:",
choices = c("Elec- Commercial", "Elec- Residential", "Gas- Commercial", "Gas- Residential"),
selected = NULL
)
observeEvent({
input$year
input$class}, {
pge_res_elec <-
pge_data_raw %>%
filter(
CUSTOMERCLASS %in% input$class,
YEAR == max(input$year) ##take the latest year
) %>%
mutate(
ZIPCODE = ZIPCODE %>% as.character()
) %>%
group_by(ZIPCODE) %>%
summarize(
TOTALKBTU = sum(TOTALKBTU, na.rm = T)
) %>%
right_join(
bay_zips %>% select(GEOID10),
by = c("ZIPCODE" = "GEOID10")
) %>%
st_as_sf() %>%
st_transform(4326)
res_pal <- colorNumeric(
palette = "Reds",
domain =
pge_res_elec$TOTALKBTU
)
output$map <- renderLeaflet({
leaflet() %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
data = pge_res_elec,
fillColor = ~res_pal(TOTALKBTU),
color = "white",
opacity = 0.5,
fillOpacity = 0.5,
weight = 1,
label = ~paste0(
round(TOTALKBTU),
" kBTU total in ",
ZIPCODE
),
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addLegend(
data = pge_res_elec,
pal = res_pal,
values = ~TOTALKBTU,
title = paste0("Total Residential<br>Electricity (kBTU), ", input$year)
)
})
})
library(flexdashboard)
library(tidyverse)
library(leaflet)
library(sf)
library(plotly)
library(shiny)
pge_data_raw <- readRDS("pge_data_raw.rds")
bay_zips <- readRDS("bay_zips.rds")
pge_data <-
pge_data_raw %>%
filter(
CUSTOMERCLASS %in% c(
"Elec- Commercial",
"Elec- Residential",
"Gas- Commercial",
"Gas- Residential"
)
) %>%
group_by(
MONTH,
YEAR,
CUSTOMERCLASS
) %>%
summarize(
TOTALKBTU = sum(TOTALKBTU, na.rm = T)
) %>%
mutate(
DATE =
paste(
YEAR,
MONTH,
"01",
sep="-"
) %>% as.Date()
)
checkboxGroupInput(
inputId = "year",
label = "Year: ",
choices = 2017:2020,
selected = 2017,
inline = FALSE,
width = NULL
)
selectInput(
inputId = "class",
label = "Customer Class:",
choices = c("Elec- Commercial", "Elec- Residential", "Gas- Commercial", "Gas- Residential"),
selected = "Elec- Commercial"
)
library(flexdashboard)
library(tidyverse)
library(leaflet)
library(sf)
library(plotly)
library(shiny)
pge_data_raw <- readRDS("pge_data_raw.rds")
bay_zips <- readRDS("bay_zips.rds")
pge_data <-
pge_data_raw %>%
filter(
CUSTOMERCLASS %in% c(
"Elec- Commercial",
"Elec- Residential",
"Gas- Commercial",
"Gas- Residential"
)
) %>%
group_by(
MONTH,
YEAR,
CUSTOMERCLASS
) %>%
summarize(
TOTALKBTU = sum(TOTALKBTU, na.rm = T)
) %>%
mutate(
DATE =
paste(
YEAR,
MONTH,
"01",
sep="-"
) %>% as.Date()
)
setwd("~/Documents/GitHub/ctbeck.github.io")
library(flexdashboard)
library(tidyverse)
library(leaflet)
library(sf)
library(plotly)
library(shiny)
pge_data_raw <- readRDS("pge_data_raw.rds")
bay_zips <- readRDS("bay_zips.rds")
pge_data <-
pge_data_raw %>%
filter(
CUSTOMERCLASS %in% c(
"Elec- Commercial",
"Elec- Residential",
"Gas- Commercial",
"Gas- Residential"
)
) %>%
group_by(
MONTH,
YEAR,
CUSTOMERCLASS
) %>%
summarize(
TOTALKBTU = sum(TOTALKBTU, na.rm = T)
) %>%
mutate(
DATE =
paste(
YEAR,
MONTH,
"01",
sep="-"
) %>% as.Date()
)
checkboxGroupInput(
inputId = "year",
label = "Year: ",
choices = 2017:2020,
selected = 2017,
inline = FALSE,
width = NULL
)
selectInput(
inputId = "class",
label = "Customer Class:",
choices = c("Elec- Commercial", "Elec- Residential", "Gas- Commercial", "Gas- Residential"),
selected = "Elec- Commercial"
)
plotlyOutput("plot")
observeEvent({
input$year
input$class}, {
chart <- pge_data %>%
filter(
CUSTOMERCLASS %in% input$class,
YEAR %in% input$year ##create a vector of all the years
) %>%
ggplot(
aes(
x = MONTH,
y = TOTALKBTU/1e9
)
) +
geom_line(
aes(
color = YEAR %>% factor()
)
) +
scale_x_discrete(
limits = c(
"Jan",
"Feb",
"Mar",
"Apr",
"May",
"Jun",
"Jul",
"Aug",
"Sep",
"Oct",
"Nov",
"Dec"
)
) +
labs(
x = "",
y = "Total kBTUs (billions)",
title = paste0("Residential Energy Consumption in the Bay Area, ",input$year),
color = "Year"
) +
theme(legend.position = "none")
output$plot <- renderPlotly({
chart %>%
ggplotly() %>%
config(displayModeBar = F)
})
})
leafletOutput("map")
observeEvent({
input$year
input$class}, {
pge_res_elec <-
pge_data_raw %>%
filter(
CUSTOMERCLASS %in% input$class,
YEAR == max(input$year) ##take the latest year
) %>%
mutate(
ZIPCODE = ZIPCODE %>% as.character()
) %>%
group_by(ZIPCODE) %>%
summarize(
TOTALKBTU = sum(TOTALKBTU, na.rm = T)
) %>%
right_join(
bay_zips %>% select(GEOID10),
by = c("ZIPCODE" = "GEOID10")
) %>%
st_as_sf() %>%
st_transform(4326)
res_pal <- colorNumeric(
palette = "Reds",
domain =
pge_res_elec$TOTALKBTU
)
output$map <- renderLeaflet({
leaflet() %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
data = pge_res_elec,
fillColor = ~res_pal(TOTALKBTU),
color = "white",
opacity = 0.5,
fillOpacity = 0.5,
weight = 1,
label = ~paste0(
round(TOTALKBTU),
" kBTU total in ",
ZIPCODE
),
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addLegend(
data = pge_res_elec,
pal = res_pal,
values = ~TOTALKBTU,
title = paste0("Total Residential<br>Electricity (kBTU), ", input$year)
)
})
})
observeEvent({
input$year
input$class}, {
pge_res_elec <-
pge_data_raw %>%
filter(
CUSTOMERCLASS %in% input$class,
YEAR == max(input$year) ##take the latest year
) %>%
mutate(
ZIPCODE = ZIPCODE %>% as.character()
) %>%
group_by(ZIPCODE) %>%
summarize(
TOTALKBTU = sum(TOTALKBTU, na.rm = T)
) %>%
right_join(
bay_zips %>% select(GEOID10),
by = c("ZIPCODE" = "GEOID10")
) %>%
st_as_sf() %>%
st_transform(4326)
res_pal <- colorNumeric(
palette = "Reds",
domain =
pge_res_elec$TOTALKBTU
)
output$map <- renderLeaflet({
leaflet() %>%
addProviderTiles(provider = providers$CartoDB.Positron) %>%
addPolygons(
data = pge_res_elec,
fillColor = ~res_pal(TOTALKBTU),
color = "white",
opacity = 0.5,
fillOpacity = 0.5,
weight = 1,
label = ~paste0(
round(TOTALKBTU),
" kBTU total in ",
ZIPCODE
),
highlightOptions = highlightOptions(
weight = 2,
opacity = 1
)
) %>%
addLegend(
data = pge_res_elec,
pal = res_pal,
values = ~TOTALKBTU,
title = c("Total Residential<br>Electricity (kBTU)")
)
})
})
